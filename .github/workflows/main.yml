name: Build PyQt6 App

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  release:
    types: [created]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build with PyInstaller and package
        shell: bash
        run: |
          pyinstaller remote_zip_explorer.spec

          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            # Install NSIS
            choco install nsis -y

            # Copy .exe to installer folder
            mkdir -p dist/installer
            cp "dist/RemoteZipExplorer.exe" dist/installer/

            # Create simple NSIS script
            cat <<'EOF' > dist/installer/setup.nsi
            !define APP_NAME "RemoteZipExplorer"
            !define EXE_FILE "RemoteZipExplorer.exe"
            !define INSTALL_DIR "$PROGRAMFILES\${APP_NAME}"

            OutFile "RemoteZipExplorerInstaller.exe"
            InstallDir "${INSTALL_DIR}"
            Page directory
            Page instfiles
            Section ""
              SetOutPath "$INSTDIR"
              File "${EXE_FILE}"
              CreateShortCut "$DESKTOP\${APP_NAME}.lnk" "$INSTDIR\${EXE_FILE}"
            SectionEnd
EOF

            # Build installer
            makensis dist/installer/setup.nsi

          elif [ "${{ matrix.os }}" = "macos-latest" ]; then
            hdiutil create -volname "RemoteZipExplorer" -srcfolder dist -ov -format UDZO dist/RemoteZipExplorerInstaller.dmg

          else
            mkdir -p dist/installer
            cp -a "dist/RemoteZipExplorer" dist/installer/
            tar -czvf dist/RemoteZipExplorerInstaller.tar.gz -C dist/installer .

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: remote-zip-explorer-installer-${{ matrix.os }}
          path: |
            dist/installer/*
            dist/RemoteZipExplorerInstaller*
            
  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    steps:
      - uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Publish Release Assets
        uses: softprops/action-gh-release@v2
        with:
          files: |
            artifacts/**/RemoteZipExplorerInstaller*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
