name: Build PyQt6 App

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
    - name: Build with PyInstaller (Installer for each OS)
      run: |
        if [ "${{ matrix.os }}" = "windows-latest" ]; then
          pyinstaller --noconfirm --windowed --icon "Remote Zip Explorer.png" --name "Remote Zip Explorer" --onefile --add-data "Remote Zip Explorer.png;." --specpath . remote_zip_explorer.spec
          pip install pyinstaller-windows-installer
          pyinstaller-windows-installer dist/Remote\ Zip\ Explorer.exe --output dist/RemoteZipExplorerInstaller.exe
        elif [ "${{ matrix.os }}" = "macos-latest" ]; then
          pyinstaller --noconfirm --windowed --icon "Remote Zip Explorer.png" --name "Remote Zip Explorer" --onefile --add-data "Remote Zip Explorer.png:." --specpath . remote_zip_explorer.spec
          hdiutil create -volname "RemoteZipExplorer" -srcfolder dist -ov -format UDZO dist/RemoteZipExplorerInstaller.dmg
        else
          pyinstaller --noconfirm --windowed --icon "Remote Zip Explorer.png" --name "Remote Zip Explorer" --onefile --add-data "Remote Zip Explorer.png:." --specpath . remote_zip_explorer.spec
          mkdir -p dist/installer
          cp dist/Remote\ Zip\ Explorer dist/installer/
          tar -czvf dist/RemoteZipExplorerInstaller.tar.gz -C dist/installer .
        fi
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: remote-zip-explorer-installer-${{ matrix.os }}
        path: |
          dist/RemoteZipExplorerInstaller*
